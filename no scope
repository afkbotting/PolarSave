loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/Bypasses.lua", true))()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/LowerEndBypass.lua", true))()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("No Scope Legit", "DarkTheme")

local main = Window:NewTab("Main")
local triggerSection = main:NewSection("Trigger Bot")

local Players = game:GetService("Players")
local lp = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() and Players.LocalPlayer
local mouse = lp:GetMouse()

local function getTarget(instance)
    for i, v in ipairs(Players:GetPlayers()) do
        if v.Character and (instance == v.Character or instance:IsDescendantOf(v.Character)) then
            return true
        end
    end
end

local triggerEnabled = false

local triggerToggle = triggerSection:NewToggle("Trigger Bot", "Enable or disable the trigger bot", function(enabled)
    triggerEnabled = enabled
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if triggerEnabled then
        if getTarget(mouse.Target) then
            mouse1press()
            mouse1release()
        end
    end
    task.wait() 
end)

local visualsTab = Window:NewTab("Visuals")
local fovSection = visualsTab:NewSection("Field of View")

local fovSlider = fovSection:NewSlider("FOV", "Adjust the field of view", 120, 10, function(fov)
    game:GetService("Workspace").CurrentCamera.FieldOfView = fov
end)

local GunmodTab = Window:NewTab("Gun mods")
local GunmodSection = GunmodTab:NewSection("Gun mods")
for _, obj in ipairs(getgc(true)) do
    if type(obj) == "table" and rawget(obj, "RecoilMult") and rawget(obj, "Damage") then
    end
end
function Modgun(prop, value)
    for _, gun in ipairs(getgc(true)) do
        if type(gun) == "table" and rawget(gun, "RecoilMult") and rawget(gun, "Damage") then
            gun[prop] = value
        end
    end
end

local firerateEnabled = false

local firerateToggle1 = GunmodSection:NewToggle("Fire Rate", "Enable or disable custom fire rate", function(enabled)
    firerateEnabled = enabled
    if enabled then
        Modgun("FireRate", 0)
    else
        Modgun("FireRate", 0.5)
    end
end)

local reloadTimeToggle = GunmodSection:NewToggle("Reload Time", "Enable or disable custom reload time", function(enabled)
    firerateEnabled = enabled
    if enabled then
        Modgun("ReloadTime", 0)
    else
        Modgun("ReloadTime", 0.28)
    end
end)

local rangeToggle = GunmodSection:NewToggle("Range", "Enable or disable custom range", function(enabled)
    firerateEnabled = enabled
    if enabled then
        Modgun("Range", math.huge)
    else
        Modgun("Range", 1000)
    end
end)

local spreadToggle = GunmodSection:NewToggle("Spread", "Enable or disable custom spread", function(enabled)
    firerateEnabled = enabled
    if enabled then
        Modgun("Spread", 0)
    else
        Modgun("Spread", 6)
    end
end)

local equipTimeToggle = GunmodSection:NewToggle("Equip Time", "Enable or disable custom equip time", function(enabled)
    firerateEnabled = enabled
    if enabled then
        Modgun("EquipTime", 0)
    else
        Modgun("EquipTime", 0.4)
    end
end)

local clipSizeToggle = GunmodSection:NewToggle("Clip Size", "Enable or disable custom clip size", function(enabled)
    firerateEnabled = enabled
    if enabled then
        Modgun("ClipSize", math.huge)
    else
        Modgun("ClipSize", 7)
    end
end)

local settingsTab = Window:NewTab("Settings")
local keybindSection = settingsTab:NewSection("Keybind")

local currentKeybindConnection

local UIS = game:GetService("UserInputService")

local keybindTextBox = keybindSection:NewTextBox("Keybind", "Enter your desired keybind", function(keybind)
    keybind = string.upper(keybind)
    
    if #keybind == 1 then
        local keyCode = Enum.KeyCode[keybind]
        if keyCode then
            if currentKeybindConnection then
                currentKeybindConnection:Disconnect()
            end
            currentKeybindConnection = UIS.InputBegan:Connect(function(input)
                if input.KeyCode == keyCode then
                    Library:ToggleUI()
                end
            end)
        else
            keybindTextBox:SetValue("")
        end
    else
        keybindTextBox:SetValue("")
    end
end)
